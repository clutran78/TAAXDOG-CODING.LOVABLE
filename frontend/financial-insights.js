/**
 * Financial Insights Module
 * 
 * This file contains functions for fetching and displaying financial insights
 * generated by Claude 3.7 AI.
 */

// Function to get financial insights from Claude 3.7
async function getFinancialInsights() {
    try {
        // Show loading indicator
        document.getElementById('insights-loading').classList.remove('d-none');
        document.getElementById('insights-error').classList.add('d-none');
        document.getElementById('insights-content').classList.add('d-none');
        
        // Get Firebase ID token
        const user = firebase.auth().currentUser;
        let idToken = '';
        
        if (user) {
            idToken = await user.getIdToken();
        }
        
        // Call the API
        const response = await fetch('/api/financial/insights', {
            method: 'GET',
            headers: {
                'Authorization': idToken,
                'Content-Type': 'application/json'
            }
        });
        
        const data = await response.json();
        
        if (!data.success) {
            throw new Error(data.error || 'Failed to get financial insights');
        }
        
        // Hide loading, show content
        document.getElementById('insights-loading').classList.add('d-none');
        document.getElementById('insights-content').classList.remove('d-none');
        
        // Display the insights
        displayInsights(data.insights);
        
    } catch (error) {
        console.error('Error getting financial insights:', error);
        document.getElementById('insights-loading').classList.add('d-none');
        document.getElementById('insights-error').classList.remove('d-none');
        document.getElementById('insights-error-message').textContent = error.message || 'Failed to get financial insights';
    }
}

// Function to display financial insights
function displayInsights(insights) {
    // Display spending patterns
    const spendingPatternsContainer = document.getElementById('spending-patterns');
    spendingPatternsContainer.innerHTML = '';
    
    if (insights.spending_patterns && insights.spending_patterns.length > 0) {
        const patternsHTML = insights.spending_patterns.map(pattern => `
            <div class="mb-3">
                <h6>${pattern.pattern}</h6>
                <p class="text-muted">${pattern.description}</p>
                <p class="fw-bold">Amount: $${parseFloat(pattern.amount).toFixed(2)}</p>
            </div>
        `).join('');
        
        spendingPatternsContainer.innerHTML = patternsHTML;
    } else {
        spendingPatternsContainer.innerHTML = '<p class="text-muted">No spending patterns available.</p>';
    }
    
    // Display top categories
    const topCategoriesContainer = document.getElementById('top-categories');
    topCategoriesContainer.innerHTML = '';
    
    if (insights.top_categories && insights.top_categories.length > 0) {
        const categoriesHTML = insights.top_categories.map((category, index) => `
            <div class="mb-3">
                <div class="d-flex justify-content-between align-items-center">
                    <h6>${category.category}</h6>
                    <span class="badge bg-primary">${category.percentage}</span>
                </div>
                <div class="progress" style="height: 10px;">
                    <div class="progress-bar" role="progressbar" style="width: ${category.percentage};" 
                        aria-valuenow="${parseFloat(category.percentage)}" aria-valuemin="0" aria-valuemax="100"></div>
                </div>
                <p class="mt-1 text-muted">$${parseFloat(category.amount).toFixed(2)}</p>
            </div>
        `).join('');
        
        topCategoriesContainer.innerHTML = categoriesHTML;
    } else {
        topCategoriesContainer.innerHTML = '<p class="text-muted">No category data available.</p>';
    }
    
    // Display saving recommendations
    const savingRecsContainer = document.getElementById('saving-recommendations');
    savingRecsContainer.innerHTML = '';
    
    if (insights.saving_recommendations && insights.saving_recommendations.length > 0) {
        const recsHTML = insights.saving_recommendations.map(rec => `
            <div class="mb-3">
                <h6>${rec.recommendation}</h6>
                <div class="d-flex justify-content-between align-items-center">
                    <span>Potential Saving: $${parseFloat(rec.potential_saving).toFixed(2)}</span>
                    <span class="badge ${rec.difficulty === 'easy' ? 'bg-success' : rec.difficulty === 'medium' ? 'bg-warning' : 'bg-danger'}">
                        ${rec.difficulty}
                    </span>
                </div>
            </div>
        `).join('');
        
        savingRecsContainer.innerHTML = recsHTML;
    } else {
        savingRecsContainer.innerHTML = '<p class="text-muted">No saving recommendations available.</p>';
    }
    
    // Display tax deductions
    const taxDeductionsContainer = document.getElementById('tax-deductions');
    taxDeductionsContainer.innerHTML = '';
    
    if (insights.tax_deductions && insights.tax_deductions.length > 0) {
        const deductionsHTML = insights.tax_deductions.map(deduction => `
            <div class="mb-3">
                <h6>${deduction.category}</h6>
                <p class="text-muted">${deduction.description}</p>
                <p class="fw-bold">Amount: $${parseFloat(deduction.amount).toFixed(2)}</p>
            </div>
        `).join('');
        
        taxDeductionsContainer.innerHTML = deductionsHTML;
    } else {
        taxDeductionsContainer.innerHTML = '<p class="text-muted">No tax deductions identified.</p>';
    }
    
    // Display main insights
    const insightsContentContainer = document.getElementById('insights-content');
    insightsContentContainer.innerHTML = `
        <div class="alert alert-success">
            <h5><i class="fas fa-robot me-2"></i>Claude 3.7 Financial Analysis</h5>
            <p>Here's an AI-powered analysis of your financial data. These insights are designed to help you make better financial decisions.</p>
        </div>
    `;
}

// Function to get financial goals
async function getFinancialGoals() {
    try {
        // Show loading indicator
        document.getElementById('goals-loading').classList.remove('d-none');
        document.getElementById('goals-error').classList.add('d-none');
        document.getElementById('financial-goals').classList.add('d-none');
        
        // Get Firebase ID token
        const user = firebase.auth().currentUser;
        let idToken = '';
        
        if (user) {
            idToken = await user.getIdToken();
        }
        
        // Call the API
        const response = await fetch('/api/financial/goals', {
            method: 'GET',
            headers: {
                'Authorization': idToken,
                'Content-Type': 'application/json'
            }
        });
        
        const data = await response.json();
        
        if (!data.success) {
            throw new Error(data.error || 'Failed to get financial goals');
        }
        
        // Hide loading, show content
        document.getElementById('goals-loading').classList.add('d-none');
        document.getElementById('financial-goals').classList.remove('d-none');
        
        // Display the goals
        displayFinancialGoals(data.goals);
        
    } catch (error) {
        console.error('Error getting financial goals:', error);
        document.getElementById('goals-loading').classList.add('d-none');
        document.getElementById('goals-error').classList.remove('d-none');
        document.getElementById('goals-error-message').textContent = error.message || 'Failed to get financial goals';
    }
}

// Function to display financial goals
function displayFinancialGoals(goals) {
    const goalsContainer = document.getElementById('financial-goals');
    goalsContainer.innerHTML = '';
    
    if (goals && goals.length > 0) {
        const goalsHTML = goals.map(goal => `
            <div class="card mb-3">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h6 class="mb-0">${goal.title}</h6>
                        <span class="badge ${goal.priority === 'high' ? 'bg-danger' : goal.priority === 'medium' ? 'bg-warning' : 'bg-info'}">
                            ${goal.priority}
                        </span>
                    </div>
                </div>
                <div class="card-body">
                    <p>${goal.description}</p>
                    <div class="d-flex justify-content-between mb-2">
                        <span>Target Amount:</span>
                        <span class="fw-bold">$${parseFloat(goal.target_amount || 0).toFixed(2)}</span>
                    </div>
                    <div class="d-flex justify-content-between mb-3">
                        <span>Timeframe:</span>
                        <span>${goal.timeframe}</span>
                    </div>
                    <h6>Steps to achieve:</h6>
                    <ul class="ps-3">
                        ${goal.steps.map(step => `<li>${step}</li>`).join('')}
                    </ul>
                </div>
            </div>
        `).join('');
        
        goalsContainer.innerHTML = goalsHTML;
    } else {
        goalsContainer.innerHTML = '<p class="text-muted">No financial goals available.</p>';
    }
}

// Initialize event listeners when document is loaded
document.addEventListener('DOMContentLoaded', function() {
    // Event listener for refresh insights button
    const refreshButton = document.getElementById('refresh-insights');
    if (refreshButton) {
        refreshButton.addEventListener('click', function() {
            getFinancialInsights();
        });
    }
    
    // Load financial insights when tab is selected
    const insightsTab = document.getElementById('financial-insights-tab');
    if (insightsTab) {
        insightsTab.addEventListener('click', function() {
            getFinancialInsights();
            getFinancialGoals();
        });
    }
});
