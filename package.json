{
  "name": "taaxdog",
  "version": "0.1.0",
  "private": true,
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "scripts": {
    "dev": "node server.js",
    "build": "prisma generate && next build",
    "build:polyfills": "prisma generate && node scripts/build-with-polyfills.js",
    "build:do": "npm run build:polyfills",
    "build:analyze": "ANALYZE=true npm run build",
    "analyze-bundle": "ts-node --project tsconfig.node.json scripts/analyze-bundle.ts",
    "optimization:report": "ts-node --project tsconfig.node.json scripts/optimization-report.ts",
    "start": "NODE_ENV=production node server.js",
    "lint": "next lint",
    "lint:fix": "next lint --fix",
    "format": "prettier --write \"**/*.{js,jsx,ts,tsx,json,md,yml,yaml,css,scss}\"",
    "format:check": "prettier --check \"**/*.{js,jsx,ts,tsx,json,md,yml,yaml,css,scss}\"",
    "type-check": "tsc --noEmit",
    "validate": "npm run type-check && npm run lint && npm run format:check",
    "fix:naming": "node scripts/fix-naming-conventions.js",
    "fix:console": "node scripts/remove-console-statements.js",
    "quality:report": "ts-node --project tsconfig.node.json scripts/code-quality-report.ts",
    "quality:check": "npm run validate && npm run quality:report",
    "fix:all": "npm run fix:naming && npm run fix:console && npm run lint:fix && npm run format",
    "postinstall": "prisma generate",
    "build:production": "./scripts/build-production.sh",
    "migrate": "ts-node --project tsconfig.node.json scripts/migrate.ts",
    "test-db": "ts-node --project tsconfig.node.json scripts/test-db-connection.ts",
    "postgres:import": "node scripts/postgresql-import-system.js",
    "postgres:import-optimized": "node scripts/postgresql-import-orchestrator.js",
    "postgres:import-batch": "node scripts/postgresql-import-orchestrator.js --batch",
    "db:import": "npm run postgres:import-optimized",
    "migration:validate": "node scripts/migration-validator.js",
    "migration:rollback": "node scripts/migration-rollback.js",
    "migration:rollback:dry": "node scripts/migration-rollback.js rollback --dry-run",
    "migration:complete": "npm run db:import && npm run migration:validate",
    "verify:counts": "python3 scripts/check-counts.py",
    "verify:relationships": "python3 scripts/check-relationships.py",
    "verify:compliance": "python3 scripts/check-compliance.py",
    "verify:quick": "./scripts/quick-verify.sh",
    "verify:full": "python3 scripts/verify-migration.py",
    "test-email": "ts-node --project tsconfig.node.json scripts/test-email.ts",
    "test-password-reset": "ts-node --project tsconfig.node.json scripts/test-password-reset.ts",
    "apply-rls-migration": "./scripts/apply-rls-migration.sh",
    "test-rls": "ts-node --project tsconfig.node.json scripts/test-rls-policies.ts",
    "test-encryption": "ts-node --project tsconfig.node.json scripts/test-encryption.ts",
    "verify:encryption": "ts-node --project tsconfig.node.json scripts/verify-encryption.ts",
    "test:api": "./scripts/test-api-endpoints.sh",
    "test:db-performance": "ts-node --project tsconfig.node.json scripts/test-database-performance.ts",
    "test:security": "ts-node --project tsconfig.node.json scripts/test-security.ts",
    "test:isolation": "ts-node --project tsconfig.node.json scripts/test-user-isolation.ts",
    "test:errors": "ts-node --project tsconfig.node.json scripts/test-error-handling.ts",
    "test:all": "npm run test:api && npm run test:db-performance && npm run test:security && npm run test:isolation && npm run test:errors",
    "audit:maintenance": "tsx scripts/audit-log-maintenance.ts",
    "audit:cleanup": "tsx scripts/audit-log-maintenance.ts --cleanup-only",
    "audit:verify": "tsx scripts/audit-log-maintenance.ts --verify-only",
    "compliance:aml": "ts-node --project tsconfig.node.json scripts/compliance/aml-monitoring.ts",
    "compliance:privacy": "ts-node --project tsconfig.node.json scripts/compliance/privacy-monitoring.ts",
    "compliance:apra": "ts-node --project tsconfig.node.json scripts/compliance/apra-monitoring.ts",
    "compliance:all": "ts-node --project tsconfig.node.json scripts/compliance/run-all-monitoring.ts",
    "compliance:monthly-report": "ts-node --project tsconfig.node.json scripts/compliance/generate-monthly-report.ts",
    "compliance:check-alerts": "ts-node --project tsconfig.node.json scripts/compliance/check-critical-alerts.ts",
    "compliance:backup-reports": "ts-node --project tsconfig.node.json scripts/compliance/backup-reports.ts",
    "optimize:apply": "ts-node --project tsconfig.node.json scripts/apply-query-optimizations.ts",
    "optimize:views:refresh": "ts-node --project tsconfig.node.json -e \"import {prisma} from './lib/prisma'; prisma.$executeRaw\\`SELECT refresh_analytics_views()\\`.then(() => console.log('Views refreshed')).catch(console.error).finally(() => prisma.$disconnect())\"",
    "monitoring:setup": "ts-node --project tsconfig.node.json scripts/setup-monitoring.ts",
    "migrate:interactive": "tsx scripts/run-migrations.ts",
    "migrate:data": "tsx scripts/migrate-data.ts",
    "migrate:users": "tsx scripts/migrations/user-data-migrations.ts",
    "migrate:cleanup": "tsx scripts/migrations/database-cleanup.ts",
    "db:validate": "tsx scripts/utils/data-validator.ts",
    "db:backup": "tsx scripts/utils/backup-manager.ts",
    "db:restore": "tsx scripts/utils/backup-manager.ts restore",
    "db:checksum": "tsx scripts/utils/data-validator.ts --checksum",
    "monitoring:dashboard": "echo 'Performance dashboard available at: http://localhost:3000/admin/performance'",
    "backup:full": "tsx scripts/backup/database-backup.ts full",
    "backup:incremental": "tsx scripts/backup/database-backup.ts incremental",
    "backup:verify": "tsx scripts/backup/backup-verification.ts",
    "backup:verify:latest": "tsx scripts/backup/backup-verification.ts --latest",
    "backup:recover": "tsx scripts/backup/disaster-recovery.ts",
    "backup:test-restore": "tsx scripts/backup/disaster-recovery.ts --verify",
    "backup:archive": "tsx scripts/backup/data-archival.ts",
    "backup:restore-archive": "tsx scripts/backup/data-archival.ts --restore",
    "backup:monitor": "tsx scripts/backup/backup-monitoring.ts",
    "backup:monitor:dashboard": "tsx scripts/backup/backup-monitoring.ts --dashboard",
    "monitor:resources": "tsx scripts/maintenance/start-monitoring.ts",
    "monitor:resources:daemon": "tsx scripts/maintenance/start-monitoring.ts --daemon",
    "cleanup:logs": "tsx scripts/maintenance/cleanup-logs.ts",
    "cleanup:logs:dry": "tsx scripts/maintenance/cleanup-logs.ts --dry-run",
    "cleanup:logs:force": "tsx scripts/maintenance/cleanup-logs.ts --force",
    "env:validate": "tsx scripts/deployment/environment-validation.ts",
    "backup:setup-cron": "bash scripts/backup/setup-backup-cron.sh",
    "security:validate": "tsx scripts/security/security-validation.ts",
    "security:pentest": "tsx scripts/security/penetration-testing.ts",
    "security:compliance": "tsx scripts/security/compliance-verification.ts",
    "security:monitor": "tsx scripts/security/security-monitoring.ts",
    "security:monitor:dashboard": "tsx scripts/security/security-monitoring.ts --dashboard",
    "security:scan": "tsx scripts/security/security-monitoring.ts --scan",
    "security:full-test": "npm run security:validate && npm run security:compliance",
    "deploy:check:env": "tsx scripts/deployment/environment-validation.ts",
    "deploy:check:performance": "tsx scripts/deployment/performance-validation.ts",
    "deploy:check:security": "tsx scripts/deployment/security-checklist.ts",
    "deploy:check:operations": "tsx scripts/deployment/operational-readiness.ts",
    "deploy:check:golive": "tsx scripts/deployment/go-live-validation.ts",
    "deploy:checklist": "bash scripts/deployment/deployment-checklist.sh",
    "deploy:validate": "npm run deploy:checklist",
    "env:dev": "node scripts/env-manager.js set development",
    "env:prod": "node scripts/env-manager.js set production",
    "env:staging": "node scripts/env-manager.js set staging",
    "env:status": "node scripts/env-manager.js status",
    "env:help": "node scripts/env-manager.js help",
    "manage-accounts": "ts-node --project tsconfig.node.json scripts/manage-test-accounts.ts",
    "fix-password": "ts-node --project tsconfig.node.json scripts/fix-user-password.ts",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest --testPathPattern='.*.spec.ts(x)?$'",
    "test:integration": "jest --config __tests__/integration/setup/jest.config.integration.js",
    "test:integration:watch": "jest --config __tests__/integration/setup/jest.config.integration.js --watch",
    "test:integration:coverage": "jest --config __tests__/integration/setup/jest.config.integration.js --coverage",
    "test:ci": "jest --ci --coverage --maxWorkers=2",
    "prepare": "husky"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.55.1",
    "@auth/prisma-adapter": "^2.10.0",
    "@aws-sdk/client-s3": "^3.848.0",
    "@google/generative-ai": "^0.24.1",
    "@headlessui/react": "^2.2.4",
    "@heroicons/react": "^2.2.0",
    "@next-auth/prisma-adapter": "^1.0.7",
    "@prisma/client": "^6.10.1",
    "@sendgrid/mail": "^8.1.5",
    "@sentry/browser": "^9.42.0",
    "@sentry/nextjs": "^9.42.0",
    "@sentry/profiling-node": "^9.42.0",
    "@stripe/mcp": "^0.2.3",
    "@stripe/react-stripe-js": "^3.7.0",
    "@stripe/stripe-js": "^7.4.0",
    "@tanstack/react-query": "^5.83.0",
    "@tanstack/react-query-devtools": "^5.83.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/express-rate-limit": "^5.1.3",
    "@types/formidable": "^3.4.5",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/redis": "^4.0.10",
    "autoprefixer": "^10.4.21",
    "axios": "^1.6.2",
    "bcryptjs": "^3.0.2",
    "bootstrap": "^5.3.7",
    "date-fns": "^4.1.0",
    "date-fns-tz": "^3.2.0",
    "dotenv": "^16.0.3",
    "express-rate-limit": "^8.0.1",
    "express-validator": "^7.2.1",
    "formidable": "^3.5.4",
    "formik": "^2.4.6",
    "helmet": "^8.1.0",
    "isomorphic-dompurify": "^2.26.0",
    "js-cookie": "^3.0.5",
    "jsonwebtoken": "^9.0.2",
    "lru-cache": "^11.1.0",
    "lucide-react": "^0.526.0",
    "micro": "^10.0.1",
    "next": "15.3.4",
    "next-auth": "^4.24.11",
    "nodemailer": "^6.9.8",
    "openai": "^4.104.0",
    "pg": "^8.11.3",
    "postcss": "^8.5.6",
    "prisma": "^6.10.1",
    "qrcode": "^1.5.3",
    "react": "^19.0.0",
    "react-bootstrap": "^2.10.10",
    "react-dom": "^19.0.0",
    "react-icons": "^5.5.0",
    "react-virtualized-auto-sizer": "^1.0.26",
    "react-window": "^1.8.11",
    "recharts": "^2.10.3",
    "redis": "^5.6.0",
    "request-ip": "^3.3.0",
    "side-channel": "^1.1.0",
    "speakeasy": "^2.0.0",
    "stripe": "^18.2.1",
    "tailwindcss": "^4.1.11",
    "uuid": "^11.1.0",
    "web-vitals": "^5.0.3",
    "winston": "^3.11.0",
    "yup": "^1.6.1"
  },
  "devDependencies": {
    "@faker-js/faker": "^9.9.0",
    "@playwright/test": "^1.54.1",
    "@tailwindcss/postcss": "^4.1.11",
    "@testing-library/jest-dom": "^6.6.0",
    "@testing-library/react": "^16.1.0",
    "@testing-library/user-event": "^14.5.2",
    "@types/jest": "^29.5.14",
    "@types/js-cookie": "^3.0.6",
    "@types/node": "^20.19.8",
    "@types/nodemailer": "^6.4.14",
    "@types/pg": "^8.10.9",
    "@types/qrcode": "^1.5.5",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@types/speakeasy": "^2.0.10",
    "@typescript-eslint/eslint-plugin": "^8.38.0",
    "@typescript-eslint/parser": "^8.38.0",
    "compression-webpack-plugin": "^11.1.0",
    "eslint": "^8",
    "eslint-config-next": "15.3.4",
    "eslint-config-prettier": "^10.1.8",
    "eslint-import-resolver-typescript": "^4.4.4",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-prettier": "^5.5.3",
    "husky": "^9.1.7",
    "identity-obj-proxy": "^3.0.0",
    "ignore-loader": "^0.1.2",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-mock-extended": "^3.0.7",
    "js-yaml": "^4.1.0",
    "lint-staged": "^16.1.2",
    "node-fetch": "^2.7.0",
    "node-mocks-http": "^1.17.2",
    "prettier": "^3.6.2",
    "ts-jest": "^29.2.5",
    "ts-node": "^10.9.1",
    "tsx": "^4.7.0",
    "typescript": "^5",
    "webpack-bundle-analyzer": "^4.10.2"
  },
  "overrides": {
    "cookie": "^0.7.2"
  }
}
